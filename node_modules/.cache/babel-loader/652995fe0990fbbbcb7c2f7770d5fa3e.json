{"ast":null,"code":"import _classCallCheck from \"D:\\\\FrontEndBoiler\\\\deakin-frontend-boilerplate\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport { history } from 'helpers/router';\n\nvar AppHelper = function AppHelper() {\n  var _this = this;\n\n  _classCallCheck(this, AppHelper);\n\n  this.developerModeLoginUser = function (loggedIn) {\n    window.localStorage.setItem(\"loggedIn\", loggedIn);\n    window.localStorage.setItem(\"developerMode\", loggedIn);\n    history.push('/home'); // Change this if you have to\n  };\n\n  this.loginUser = function (loggedIn, accessToken) {\n    window.localStorage.setItem(\"loggedIn\", loggedIn);\n    window.localStorage.setItem(\"accessToken\", accessToken);\n    history.push('/home'); // Change this if you have to\n  };\n\n  this.logoutUser = function () {\n    window.localStorage.setItem(\"loggedIn\", false);\n    window.localStorage.setItem(\"developerMode\", false);\n    window.localStorage.removeItem(\"accessToken\");\n    history.push('/');\n  };\n\n  this.isUserLocalStorageLoggedIn = function () {\n    var token = \"\";\n\n    if (_this.getUserLoggedIn() && (token = _this.getUserAccessToken()) !== \"\" || _this.getUserLoggedIn() && _this.getDeveloperMode()) {\n      token = \"\" + (_this.getUserAccessToken() || _this.getDeveloperMode()); // this is wrong!\n\n      return token;\n    } else return false;\n  };\n\n  this.getUserLoggedIn = function () {\n    var value = window.localStorage.getItem(\"loggedIn\");\n    return value !== 'false' && value !== null;\n  };\n\n  this.getUserAccessToken = function () {\n    var value = window.localStorage.getItem(\"accessToken\");\n    return value !== 'false' && value !== null && value !== \"\" ? value : \"\";\n  };\n\n  this.getDeveloperMode = function () {\n    var value = window.localStorage.getItem(\"developerMode\");\n    return value !== 'false' && value !== null;\n  };\n};\n\nvar instance = new AppHelper();\nexport default instance;","map":{"version":3,"sources":["D:\\FrontEndBoiler\\deakin-frontend-boilerplate\\src\\helpers\\AppHelper.js"],"names":["history","AppHelper","developerModeLoginUser","loggedIn","window","localStorage","setItem","push","loginUser","accessToken","logoutUser","removeItem","isUserLocalStorageLoggedIn","token","getUserLoggedIn","getUserAccessToken","getDeveloperMode","value","getItem","instance"],"mappings":";AAAA,SAASA,OAAT,QAAwB,gBAAxB;;IAEMC,S;;;;;OACJC,sB,GAAyB,UAACC,QAAD,EAAc;AACrCC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCH,QAAxC;AACAC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,eAA5B,EAA6CH,QAA7C;AACAH,IAAAA,OAAO,CAACO,IAAR,CAAa,OAAb,EAHqC,CAGf;AACvB,G;;OAEDC,S,GAAY,UAACL,QAAD,EAAWM,WAAX,EAA2B;AACrCL,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCH,QAAxC;AACAC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,EAA2CG,WAA3C;AACAT,IAAAA,OAAO,CAACO,IAAR,CAAa,OAAb,EAHqC,CAGf;AACvB,G;;OAEDG,U,GAAa,YAAM;AACjBN,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwC,KAAxC;AACAF,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,eAA5B,EAA6C,KAA7C;AACAF,IAAAA,MAAM,CAACC,YAAP,CAAoBM,UAApB,CAA+B,aAA/B;AACAX,IAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACD,G;;OAaDK,0B,GAA6B,YAAM;AACjC,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAK,KAAI,CAACC,eAAL,MAA2B,CAACD,KAAK,GAAG,KAAI,CAACE,kBAAL,EAAT,MAAwC,EAApE,IACC,KAAI,CAACD,eAAL,MAA2B,KAAI,CAACE,gBAAL,EADhC,EAC2D;AACzDH,MAAAA,KAAK,GAAG,MAAQ,KAAI,CAACE,kBAAL,EAAD,IAA+B,KAAI,CAACC,gBAAL,EAAtC,CAAR,CADyD,CACgB;;AACzE,aAAOH,KAAP;AACD,KAJD,MAME,OAAO,KAAP;AACH,G;;OAEDC,e,GAAkB,YAAM;AACtB,QAAIG,KAAK,GAAGb,MAAM,CAACC,YAAP,CAAoBa,OAApB,CAA4B,UAA5B,CAAZ;AACA,WAASD,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,IAAxC;AACD,G;;OAEDF,kB,GAAqB,YAAM;AACzB,QAAIE,KAAK,GAAGb,MAAM,CAACC,YAAP,CAAoBa,OAApB,CAA4B,aAA5B,CAAZ;AACA,WAASD,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,IAA/B,IAAuCA,KAAK,KAAK,EAAnD,GAA0DA,KAA1D,GAAkE,EAAzE;AACD,G;;OAEDD,gB,GAAmB,YAAM;AACvB,QAAIC,KAAK,GAAGb,MAAM,CAACC,YAAP,CAAoBa,OAApB,CAA4B,eAA5B,CAAZ;AACA,WAASD,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,IAAxC;AACD,G;;;AAIH,IAAME,QAAQ,GAAG,IAAIlB,SAAJ,EAAjB;AACA,eAAekB,QAAf","sourcesContent":["import { history } from 'helpers/router';\r\n\r\nclass AppHelper {\r\n  developerModeLoginUser = (loggedIn) => {\r\n    window.localStorage.setItem(\"loggedIn\", loggedIn);\r\n    window.localStorage.setItem(\"developerMode\", loggedIn);\r\n    history.push('/home') // Change this if you have to\r\n  }\r\n\r\n  loginUser = (loggedIn, accessToken) => {\r\n    window.localStorage.setItem(\"loggedIn\", loggedIn);\r\n    window.localStorage.setItem(\"accessToken\", accessToken);\r\n    history.push('/home') // Change this if you have to\r\n  }\r\n\r\n  logoutUser = () => {\r\n    window.localStorage.setItem(\"loggedIn\", false);\r\n    window.localStorage.setItem(\"developerMode\", false);\r\n    window.localStorage.removeItem(\"accessToken\");\r\n    history.push('/')\r\n  }\r\n\r\n  /*\r\n    Returns if there's a valid login in localStorage. \r\n    For a valid login, either of the two should be satisfied in localStorage:\r\n    1. loggedIn is true + accessToken is not false or null or \"\".\r\n        Should return token as a valid accessToken which is not the string 'true'\r\n    2. loggedIn is true + developerMode is true.\r\n        Should return token as the string 'true'\r\n\r\n    Else, returns false\r\n\r\n  */\r\n  isUserLocalStorageLoggedIn = () => {\r\n    let token = \"\";\r\n    if ((this.getUserLoggedIn() && ((token = this.getUserAccessToken()) !== \"\")) ||\r\n        (this.getUserLoggedIn() && (this.getDeveloperMode()))) {\r\n      token = \"\" + ( (this.getUserAccessToken()) || this.getDeveloperMode() ); // this is wrong!\r\n      return token;\r\n    }\r\n    else\r\n      return false;\r\n  }\r\n\r\n  getUserLoggedIn = () => {\r\n    let value = window.localStorage.getItem(\"loggedIn\");\r\n    return ( value !== 'false' && value !== null );\r\n  }\r\n\r\n  getUserAccessToken = () => {\r\n    let value = window.localStorage.getItem(\"accessToken\");\r\n    return ( value !== 'false' && value !== null && value !== \"\" ) ? value : \"\" ;\r\n  }\r\n\r\n  getDeveloperMode = () => {\r\n    let value = window.localStorage.getItem(\"developerMode\");\r\n    return ( value !== 'false' && value !== null );\r\n  }\r\n\r\n}\r\n\r\nconst instance = new AppHelper();\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}