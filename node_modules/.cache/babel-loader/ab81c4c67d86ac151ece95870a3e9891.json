{"ast":null,"code":"import _classCallCheck from \"D:\\\\OnGoing\\\\CourseAgregator-Frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OnGoing\\\\CourseAgregator-Frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\OnGoing\\\\CourseAgregator-Frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\OnGoing\\\\CourseAgregator-Frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\OnGoing\\\\CourseAgregator-Frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\OnGoing\\\\CourseAgregator-Frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\OnGoing\\\\CourseAgregator-Frontend\\\\src\\\\views\\\\CourseHome\\\\CourseHome.jsx\";\nimport React, { Component } from 'react';\nimport Cards from 'components/cards/cards.jsx';\nimport LoadingComponent from 'components/loading/loading.jsx';\nimport API from 'helpers/api.js';\n\nvar CourseHome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CourseHome, _Component);\n\n  function CourseHome(props) {\n    var _this;\n\n    _classCallCheck(this, CourseHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CourseHome).call(this, props));\n\n    _this.stateHandler = function (state) {\n      _this.setState(state);\n    };\n\n    _this.getCourses = function () {\n      API.getCourses(_this.stateHandler);\n    };\n\n    _this.getAgents = function () {\n      API.getAgents(_this.stateHandler);\n    };\n\n    _this.state = {\n      catalogue: [],\n      agents: [],\n      filtered: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CourseHome, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getCourses();\n      this.getAgents();\n      this.setState({\n        filtered: this.props.catalogue\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        filtered: nextProps.catalogue\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      // Variable to hold the original version of the list\n      var currentList = []; // Variable to hold the filtered list before putting into state\n\n      var newList = []; // If the search bar isn't empty\n\n      if (e.target.value !== \"\") {\n        // Assign the original list to currentList\n        currentList = this.props.catalogue; // Use .filter() to determine which items should be displayed\n        // based on the search terms\n\n        newList = currentList.filter(function (catalogue) {\n          // change current item to lowercase\n          var lc = catalogue.toLowerCase(); // change search term to lowercase\n\n          var filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n          // If it does, it will be added to newList. Using lowercase eliminates\n          // issues with capitalization in search terms and search content\n\n          return lc.includes(filter);\n        });\n      } else {\n        // If the search bar is empty, set newList to original task list\n        newList = this.props.catalogue;\n      } // Set the filtered state based on what our rules added to newList\n\n\n      this.setState({\n        filtered: newList\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.catalogue.length == 0) return React.createElement(LoadingComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n      if (this.state.agents.length == 0) return React.createElement(LoadingComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"Courses\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        onChange: this.handleChange,\n        placeholder: \"Search...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.catalogue.map(function (value, id) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Cards, {\n          key: id,\n          showButton: \"true\",\n          data: value,\n          agents: _this2.state.agents,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return CourseHome;\n}(Component);\n\nexport default CourseHome;","map":{"version":3,"sources":["D:\\OnGoing\\CourseAgregator-Frontend\\src\\views\\CourseHome\\CourseHome.jsx"],"names":["React","Component","Cards","LoadingComponent","API","CourseHome","props","stateHandler","state","setState","getCourses","getAgents","catalogue","agents","filtered","handleChange","bind","nextProps","e","currentList","newList","target","value","filter","lc","toLowerCase","includes","length","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Cards from 'components/cards/cards.jsx'\r\nimport LoadingComponent from 'components/loading/loading.jsx';\r\nimport API from 'helpers/api.js';\r\n\r\n\r\nclass CourseHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n        this.state = {\r\n            catalogue:[],\r\n            agents:[],\r\n            filtered: []\r\n           \r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.getCourses();\r\n        this.getAgents();\r\n        this.setState({\r\n          filtered: this.props.catalogue\r\n        });\r\n      }\r\n    \r\n      stateHandler = (state) => {\r\n        this.setState(state);\r\n      }\r\n    \r\n      getCourses = () => {\r\n        API.getCourses(this.stateHandler);\r\n      }\r\n      getAgents = () => {\r\n        API.getAgents(this.stateHandler);\r\n      }\r\n      componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n          filtered: nextProps.catalogue\r\n        });\r\n      }\r\n      handleChange(e) {\r\n        // Variable to hold the original version of the list\r\n        let currentList = [];\r\n        // Variable to hold the filtered list before putting into state\r\n        let newList = [];\r\n    \r\n        // If the search bar isn't empty\r\n        if (e.target.value !== \"\") {\r\n          // Assign the original list to currentList\r\n          currentList = this.props.catalogue;\r\n    \r\n          // Use .filter() to determine which items should be displayed\r\n          // based on the search terms\r\n          newList = currentList.filter(catalogue => {\r\n            // change current item to lowercase\r\n            const lc = catalogue.toLowerCase();\r\n            // change search term to lowercase\r\n            const filter = e.target.value.toLowerCase();\r\n            // check to see if the current list item includes the search term\r\n            // If it does, it will be added to newList. Using lowercase eliminates\r\n            // issues with capitalization in search terms and search content\r\n            return lc.includes(filter);\r\n          });\r\n        } else {\r\n          // If the search bar is empty, set newList to original task list\r\n          newList = this.props.catalogue;\r\n        }\r\n        // Set the filtered state based on what our rules added to newList\r\n        this.setState({\r\n          filtered: newList\r\n        });\r\n      }\r\n    \r\n  render() {\r\n    \r\n    if (this.state.catalogue.length == 0) return <LoadingComponent/>;\r\n    if (this.state.agents.length == 0) return <LoadingComponent/>;\r\n\r\n    return (\r\n      <div className=\"Courses\">\r\n        <div className=\"container\">\r\n        <input type=\"text\" className=\"input\" onChange={this.handleChange} placeholder=\"Search...\" />\r\n          <div>\r\n            {\r\n              this.state.catalogue.map((value, id) => {\r\n                        return (\r\n                            <div>\r\n                                <Cards key={id} showButton=\"true\" data={value} agents={this.state.agents}/>\r\n                                </div>\r\n                        )\r\n\r\n                    })\r\n                }\r\n            </div>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CourseHome;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}